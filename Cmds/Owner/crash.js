const ownerMiddleware = require("../../utility/botUtil/Ownermiddleware");

module.exports = async (message) => {
  await ownerMiddleware(message, async () => {
    const {
      client,
      m,
      text,
      getGroupAdmins,
      botNumber,
      args
    } = message;

    if (!text) {
      return m.reply("Provide me a group link. Ensure the bot is in that group with admin privileges!");
    }

    let groupId;
    let groupName;
    try {
      let inviteCode = args[0].split("https://chat.whatsapp.com/")[1];
      const groupInfo = await client.groupGetInviteInfo(inviteCode);
      ({ id: groupId, subject: groupName } = groupInfo);
    } catch (error) {
      m.reply("Why are you giving me an invalid group link?");
      return;
    }

    try {
      const groupMetadata = await client.groupMetadata(groupId);
      const participants = await groupMetadata.participants;
      let participantIds = participants
        .filter(participant => participant.id !== client.decodeJid(client.user.id))
        .map(participant => participant.id);

      await m.reply("CÒ‰OÒ‰MÒ‰MÒ‰AÒ‰NÒ‰DÒ‰  HÒ‰AÒ‰SÒ‰  BÒ‰EÒ‰EÒ‰NÒ‰  IÒ‰NÒ‰IÒ‰TÒ‰IÒ‰AÒ‰LÒ‰IÒ‰ZÒ‰EÒ‰DÒ‰  AÒ‰NÒ‰DÒ‰  TÒ‰HÒ‰EÒ‰  BÒ‰OÒ‰TÒ‰  IÒ‰SÒ‰  RÒ‰EÒ‰AÒ‰DÒ‰YÒ‰  TÒ‰OÒ‰  CÒ‰RÒ‰AÒ‰SÒ‰HÒ‰ " + groupName);
      await client.groupSettingUpdate(groupId, "announcement");
      await client.groupUpdateSubject(groupId, "ðŸŽ­KÒ‰EÒ‰IÒ‰TÒ‰HÒ‰ CÒ‰RÒ‰AÒ‰SÒ‰HÒ‰EÒ‰RÒ‰ ðŸŽ­");
      await client.groupUpdateDescription(groupId, "ðŸŽ­KÒ‰EÒ‰IÒ‰TÒ‰HÒ‰ CÒ‰RÒ‰AÒ‰SÒ‰HÒ‰EÒ‰RÒ‰ ðŸŽ­");
      await client.groupRevokeInvite(groupId);

      const messageOptions = {
        quoted: m
      };
      await client.sendMessage(
        groupId,
        {
          text: `TÒ‰hÒ‰iÒ‰sÒ‰  pÒ‰rÒ‰oÒ‰cÒ‰eÒ‰sÒ‰s cÒ‰aÒ‰nÒ‰nÒ‰oÒ‰tÒ‰  bÒ‰eÒ‰  uÒ‰nÒ‰dÒ‰nÒ‰eÒ‰   aÒ‰tÒ‰  tÒ‰hÒ‰iÒ‰sÒ‰   tÒ‰iÒ‰mÒ‰eÒ‰  ,,tÒ‰hÒ‰eÒ‰  bÒ‰oÒ‰tÒ‰  wÒ‰iÒ‰lÒ‰lÒ‰  rÒ‰eÒ‰mÒ‰oÒ‰vÒ‰eÒ‰   ${participantIds.length} gÒ‰rÒ‰oÒ‰uÒ‰pÒ‰   pÒ‰aÒ‰rÒ‰tÒ‰iÒ‰cÒ‰iÒ‰pÒ‰aÒ‰nÒ‰tÒ‰sÒ‰!`,
          mentions: participants.map(participant => participant.id)
        },
        messageOptions
      );

      await client.groupParticipantsUpdate(groupId, participantIds, "remove");

      const goodbyeMessage = {
        text: "Goodbye Owner Group owner"
      };
      await client.sendMessage(groupId, goodbyeMessage);

      await client.groupLeave(groupId);
      await m.reply("```Successfully terminated this group```");
    } catch (error) {
      m.reply("```crash command failed, bot is either not in that group, or not an admin```.");
    }
  });
};

