'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TokenStream = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
opyright 2014 Shape Security, Inc.

icensed under the Apache License, Version 2.0 (the "License")
you may not use this file except in compliance with the License.
ou may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


exports.needsDoubleDot = needsDoubleDot;

var _unicode = require('./unicode');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function isIdentifierPartES6(char) {
  var charCode = char.charCodeAt(0);
  if (charCode < 128) {
    return _unicode.idContinueBool[charCode];
  }
  return _unicode.idContinueLargeRegex.test(char);
}

function needsDoubleDot(fragment) {
  return fragment.indexOf('.') < 0 && fragment.indexOf('e') < 0 && fragment.indexOf('x') < 0;
}

function renderNumber(n) {
  var s = void 0;
  if (n >= 1e3 && n % 10 === 0) {
    s = n.toString(10);
    if (/[eE]/.test(s)) {
      return s.replace(/[eE]\+/, 'e');
    }
    return n.toString(10).replace(/0{3,}$/, function (match) {
      return 'e' + match.length;
    });
  } else if (n % 1 === 0) {
    if (n > 1e15 && n < 1e20) {
      return '0x' + n.toString(16).toUpperCase();
    }
    return n.toString(10).replace(/[eE]\+/, 'e');
  }
  return n.toString(10).replace(/^0\./, '.').replace(/[eE]\+/, 'e');
}

var TokenStream = exports.TokenStream = function () {
  function TokenStream() {
    _classCallCheck(this, TokenStream);

    this.result = '';
    this.lastNumber = null;
    this.lastCodePoint = null;
    this.lastTokenStr = '';
    this.optionalSemi = false;
    this.previousWasRegExp = false;
    this.partialHtmlComment = false;
  }

  _createClass(TokenStream, [{
    key: 'putNumber',
    value: function putNumber(number) {
      var tokenStr = renderNumber(number);
      this.put(tokenStr);
      this.lastNumber = tokenStr;
    }
  }, {
    key: 'putOptionalSemi',
    value: function putOptionalSemi() {
      this.optionalSemi = true;
    }
  }, {
    key: 'putRaw',
    value: function putRaw(tokenStr) {
      this.result += tokenStr;
      this.lastTokenStr = tokenStr;
    }
  }, {
    key: 'put',
    value: function put(tokenStr, isRegExp) {
      if (this.optionalSemi) {
        this.optionalSemi = false;
        if (tokenStr !== '}') {
          this.result += ';';
          this.lastCodePoint = ';';
          this.previousWasRegExp = false;
        }
      }
      if (this.lastNumber !== null && tokenStr.length === 1) {
        if (tokenStr === '.') {
          this.result += needsDoubleDot(this.lastNumber) ? '..' : '.';
          this.lastNumber = null;
          this.lastCodePoint = '.';
          return;
        }
      }
      var tokenStrCodePointCount = [].concat(_toConsumableArray(tokenStr)).length; // slow, no unicode length?
      if (tokenStrCodePointCount > 0) {
        this.lastNumber = null;
        var rightCodePoint = String.fromCodePoint(tokenStr.codePointAt(0));
        var lastCodePoint = this.lastCodePoint;
        this.lastCodePoint = String.fromCodePoint(tokenStr.codePointAt(tokenStrCodePointCount - 1));
        var previousWasRegExp = this.previousWasRegExp;
        this.previousWasRegExp = isRegExp;

        if (lastCodePoint && ((lastCodePoint === '+' || lastCodePoint === '-') && lastCodePoint === rightCodePoint || isIdentifierPartES6(lastCodePoint) && isIdentifierPartES6(rightCodePoint) || lastCodePoint === '/' && rightCodePoint === '/' || previousWasRegExp && rightCodePoint === 'i' || this.partialHtmlComment && tokenStr.startsWith('--'))) {
          this.result += ' ';
        }
      }

      this.partialHtmlComment = this.lastTokenStr.endsWith('<') && tokenStr === '!';

      this.result += tokenStr;
      this.lastTokenStr = tokenStr;
    }
  }]);

  return TokenStream;
}();