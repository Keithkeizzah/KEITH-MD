#!
import Inbox from "./Inbox";
import Email from "./Email";
import { CreateInboxOptions } from "./CreateInboxOptions";
export declare class TempMail {
    private api_key?;
    constructor(api_key?: string | undefined);
    private makeRequest;
    /**
     * Create a new inbox.
     *
     * @param community {boolean} true to use community (formerly "rush mode") domains
     * @param domain {string} the specific domain to use.
     * @returns {Inbox} the Inbox object with the address and token.
     */
    createInbox(options?: CreateInboxOptions): Promise<Inbox>;
    /**
     * Check an inbox for emails.
     *
     * @param authentication
     * @returns {Email[] | undefined} the Email array, or undefined if the inbox has expired.
     */
    checkInbox(authentication: string | Inbox): Promise<Email[] | undefined>;
    /**
     * Check a custom domain.
     *
     * Note that this requires a TempMail Plus subscription, as well as being logged in through `this` object.
     *
     * @param domain {string} the domain to check.
     * @param token {string} the pre-SHA512 token to use for authentication.
     * @returns {Email[]} the emails, or undefined if there was an issue checking.
     */
    checkCustomDomainLegacy(domain: string, token: string): Promise<Email[]>;
    /**
     * Check a new custom domain.  Note that v2 custom domains are different in the way
     * the domain records are made.  Please visit https://tempmail.lol/account and visit custom
     * domains to see how to set the records.
     *
     * @param domain {string} your domain.
     */
    checkV2CustomDomain(domain: string): Promise<Email[] | undefined>;
    /**
     * Set the webhook for this account
     * @param webhook_url {string} the webhook URL to use.
     */
    setWebhook(webhook_url: string): Promise<void>;
    /**
     * Remove a webhook from the account.
     */
    removeWebhook(): Promise<void>;
    /**
     * Sets a private domain webhook.
     *
     * Read before using: https://github.com/tempmail-lol/server/wiki/v2-API-Endpoints#set-custom-domain-webhook
     */
    setPrivateDomainWebhook(domain: string, webhook_url: string): Promise<void>;
    /**
     * Deletes a private webhook.
     */
    deletePrivateDomainWebhook(domain: string): Promise<void>;
}
export { Email, Inbox };
