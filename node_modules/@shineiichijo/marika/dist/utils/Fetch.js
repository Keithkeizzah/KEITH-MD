"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _Fetch_axios;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fetch = void 0;
const axios_1 = __importDefault(require("axios"));
const axios_cache_interceptor_1 = require("axios-cache-interceptor");
const Error_1 = require("./Error");
class Fetch {
    constructor(cacheOptions) {
        _Fetch_axios.set(this, void 0);
        this.get = (url) => __awaiter(this, void 0, void 0, function* () {
            const throwError = (error) => {
                throw new Error_1.MarikaError(error.response.status, error.response.data.type, error.response.data.error, error.response.data.message || error.response.data.messages);
            };
            return yield __classPrivateFieldGet(this, _Fetch_axios, "f")
                .get(url)
                .then((res) => {
                if (res.status !== 200 || res.data.error !== undefined)
                    throw new Error('');
                return res.data;
            })
                .catch((err) => throwError(err));
        });
        __classPrivateFieldSet(this, _Fetch_axios, cacheOptions
            ? axios_1.default.defaults.cache
                ? axios_1.default
                : (0, axios_cache_interceptor_1.setupCache)(axios_1.default, cacheOptions)
            : axios_1.default, "f");
    }
}
exports.Fetch = Fetch;
_Fetch_axios = new WeakMap();
