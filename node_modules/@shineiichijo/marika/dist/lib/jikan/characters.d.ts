import { CacheOptions } from 'axios-cache-interceptor';
import { ICharacter, ICharacterFull, ICommonPicture, ICharacterSearchConfig, IExtendedPagination } from '../../types';
export declare class Characters {
    #private;
    /**
     * Constructs an instance of the [characters](https://docs.api.jikan.moe/#tag/characters) client
     * @param cacheOptions [Cache options](https://axios-cache-interceptor.js.org/config) for the client to make requests
     */
    constructor(cacheOptions?: CacheOptions);
    /**
     * Gets the data of a character from its MyAnimeList ID
     * @param id MyAnimeList ID of the character
     * @returns The data of the character
     */
    getCharacterById: (id: string | number) => Promise<ICharacter>;
    /**
     * Gets the full data of a character from its MyAnimeList ID
     * @param id MyAnimeList ID of the character
     * @returns The full data of the character
     */
    getCharacterFullById: (id: string | number) => Promise<ICharacterFull>;
    /**
     * Gets the list of anime appeared by a character from its MyAnimeList ID
     * @param id MyAnimeList ID of the character
     * @returns List of anime appeared by the character
     */
    getCharacterAnime: (id: string | number) => Promise<ICharacterFull['anime']>;
    /**
     * Gets the list of manga appeared by a character from its MyAnimeList ID
     * @param id MyAnimeList ID of the character
     * @returns List of manga appeared by the character
     */
    getCharacterManga: (id: string | number) => Promise<ICharacterFull['manga']>;
    /**
     * Gets the voice actors of a character from its MyAnimeList ID
     * @param id MyAnimeList ID of the character
     * @returns Voice actors of the character
     */
    getCharacterVoiceActors: (id: number | string) => Promise<ICharacterFull['voices']>;
    /**
     * Gets the pictures of a character from its MyAnimeList ID
     * @param id MyAnimeList ID of the character
     * @returns Pictures of the character
     */
    getCharacterPictures: (id: string | number) => Promise<ICommonPicture[]>;
    /**
     * Searches for a character in MyAnimeList
     * @param config Config to make the search
     * @returns The results of the search
     */
    getCharactersSearch: (config?: ICharacterSearchConfig) => Promise<{
        data: ICharacter[];
        pagination: IExtendedPagination;
    }>;
}
