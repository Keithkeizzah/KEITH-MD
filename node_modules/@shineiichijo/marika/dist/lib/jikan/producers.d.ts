import { CacheOptions } from 'axios-cache-interceptor';
import { IExtendedPagination, IProducer, IProducerFull, IProducerSearchConfig } from '../../types';
export declare class Producers {
    #private;
    /**
     * Constructs an instance of the [producers](https://docs.api.jikan.moe/#tag/producers) client
     * @param cacheOptions [Cache options](https://axios-cache-interceptor.js.org/config) for the client to make requests
     */
    constructor(cacheOptions?: CacheOptions);
    /**
     * Gets the data of a producer from its MyAnimeList ID
     * @param id MyAnimeList ID of the producer
     * @returns Data of the producer
     */
    getProducerById: (id: string | number) => Promise<IProducer>;
    /**
     * Gets the full data of a producer from its MyAnimeList ID
     * @param id MyAnimeList ID of the producer
     * @returns Full data of the producer
     */
    getProducerFullById: (id: string | number) => Promise<IProducerFull>;
    /**
     * Gets the external sites of a producer from its MyAnimeList ID
     * @param id MyAnimeList ID of the producer
     * @returns External sites of the producer
     */
    getProducerExternal: (id: string | number) => Promise<IProducerFull['external']>;
    /**
     * Searches for producers in MyAnimeList
     * @param config Config to make the request
     * @returns Result of the search
     */
    getProducers: (config?: IProducerSearchConfig) => Promise<{
        pagination: IExtendedPagination;
        data: IProducer[];
    }>;
}
