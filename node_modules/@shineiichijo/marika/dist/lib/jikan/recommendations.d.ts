import { CacheOptions } from 'axios-cache-interceptor';
import { ICommonConfig, IPagination, IRandomRecommendation } from '../../types';
export declare class Recommendations {
    #private;
    /**
     * Constructs an instance of the [recommendations](https://docs.api.jikan.moe/#tag/recommendations) client
     * @param cacheOptions [Cache options](https://axios-cache-interceptor.js.org/config) for the client to make requests
     */
    constructor(cacheOptions?: CacheOptions);
    /**
     * Gets the list of recent anime recommendations in MyAnimeList
     * @param config Config to make the request
     * @returns List of recent anime recommendations in MyAnimeList
     */
    getRecentAnimeRecommendations: (config?: ICommonConfig) => Promise<{
        data: IRandomRecommendation[];
        pagination: IPagination;
    }>;
    /**
     * Gets the list of recent manga recommendations in MyAnimeList
     * @param config Config to make the request
     * @returns List of recent manga recommendations in MyAnimeList
     */
    getRecentMangaRecommendations: (config?: ICommonConfig) => Promise<{
        data: IRandomRecommendation[];
        pagination: IPagination;
    }>;
}
