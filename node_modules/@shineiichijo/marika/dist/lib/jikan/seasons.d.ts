import { CacheOptions } from 'axios-cache-interceptor';
import { ISeasonConfig, ISeasonList, ISeasonResponse } from '../../types';
import { AnimeSeasons } from '../../constants';
export declare class Seasons {
    #private;
    /**
     * Constructs an instance of the [seasons](https://docs.api.jikan.moe/#tag/seasons) client
     * @param cacheOptions [Cache options](https://axios-cache-interceptor.js.org/config) for the client to make requests
     */
    constructor(cacheOptions?: CacheOptions);
    /**
     * Gets the list of current season's anime
     * @param config Config to make the request
     * @returns List of current season's anime
     */
    getSeasonNow: (config?: ISeasonConfig) => Promise<ISeasonResponse>;
    /**
     * Gets the list for given season's anime of the given year
     * @param year Year of the anime
     * @param season Season of the anime
     * @param config Config to make the request
     * @returns The list for given season's anime of the given year
     */
    getSeason: (year: number | string, season: AnimeSeasons, config?: ISeasonConfig) => Promise<ISeasonResponse>;
    /**
     * Gets the list of available seasons of all the years
     * @returns List of available seasons of all the years
     */
    getSeasonsList: () => Promise<ISeasonList[]>;
    /**
     * Gets the list of upcoming anime of the current season
     * @param config Config to make the request
     * @returns The list of upcoming anime of the current season
     */
    getSeasonUpcoming: (config?: ISeasonConfig) => Promise<ISeasonResponse>;
}
