import { CacheOptions } from 'axios-cache-interceptor';
import { IClub, IClubMember, IClubRelations, IClubSearchConfig, IClubStaff, ICommonConfig, IPagination } from '../../types';
export declare class Clubs {
    #private;
    /**
     * Constructs an instance of the [clubs](https://docs.api.jikan.moe/#tag/clubs) client
     * @param cacheOptions [Cache options](https://axios-cache-interceptor.js.org/config) for the client to make requests
     */
    constructor(cacheOptions?: CacheOptions);
    /**
     * Gets the data of a MyAnimeList club from its ID
     * @param id MyAnimeList ID of the club
     * @returns The data of the club
     */
    getClubsById: (id: string | number) => Promise<IClub>;
    /**
     * Gets the members of a MyAnimeList club from its id
     * @param id MyAnimelist ID of the club
     * @returns Members of the club
     */
    getClubMembers: (id: string | number, config?: ICommonConfig) => Promise<{
        pagination: IPagination;
        data: IClubMember[];
    }>;
    /**
     * Gets the staffs of a MyAnimeList club from its ID
     * @param id MyAnimeList ID of the club
     * @returns Staffs of the club
     */
    getClubStaff: (id: string | number) => Promise<IClubStaff[]>;
    /**
     * Gets the relations of a MyAnimeList club from its ID
     * @param id MyAnimeList ID of the club
     * @returns Relations of the club
     */
    getClubRelations: (id: string | number) => Promise<IClubRelations>;
    /**
     * Searches for MyAnimeList clubs
     * @param config Config to make the search
     * @returns Search results of the clubs
     */
    getClubsSearch: (config?: IClubSearchConfig) => Promise<{
        data: IClub[];
        pagination: IPagination;
    }>;
}
