import { CacheOptions } from 'axios-cache-interceptor';
import { ICommonPicture, IExtendedPagination, IPerson, IPersonFull, IPersonSearchConfig } from '../../types';
export declare class People {
    #private;
    /**
     * Constructs an instance of the [people](https://docs.api.jikan.moe/#tag/people) client
     * @param cacheOptions [Cache options](https://axios-cache-interceptor.js.org/config) for the client to make requests
     */
    constructor(cacheOptions?: CacheOptions);
    /**
     * Gets the data of a person from its MyAnimeList ID
     * @param id MyAnimeList ID of the person
     * @returns Data of the person
     */
    getPersonById: (id: string | number) => Promise<IPerson>;
    /**
     * Gets the full data of a person from its MyAnimeList ID
     * @param id MyAnimeList ID of the person
     * @returns Full data of the person
     */
    getPersonByIdFull: (id: string | number) => Promise<IPersonFull>;
    /**
     * Gets list of the anime contributed by a person from its MyAnimeList ID
     * @param id MyAnimeList ID of the person
     * @returns List of anime contributed by the person
     */
    getPersonAnime: (id: string | number) => Promise<IPersonFull['anime']>;
    /**
     * Gets list of the voices featured by a person from its MyAnimeList ID
     * @param id MyAnimeList ID of the person
     * @returns List of voices featured by the person
     */
    getPersonVoices: (id: string | number) => Promise<IPersonFull['voices']>;
    /**
     * Gets list of the manga contributed by a person from its MyAnimeList ID
     * @param id MyAnimeList ID of the person
     * @returns List of manga contributed by the person
     */
    getPersonManga: (id: string | number) => Promise<IPersonFull['manga']>;
    /**
     * Gets the pictures of a person from its MyAnimeList ID
     * @param id MyAnimeList ID of the person
     * @returns Pictures of the person
     */
    getPersonPictures: (id: string | number) => Promise<ICommonPicture[]>;
    /**
     * Searches for person in MyAnimeList
     * @param config Config to make the search
     * @returns Results of the search
     */
    getPeopleSearch: (config?: IPersonSearchConfig) => Promise<{
        pagination: IExtendedPagination;
        data: IPerson[];
    }>;
}
